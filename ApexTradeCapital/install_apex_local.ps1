# =====================================================
# üöÄ APEX TRADE CAPITAL - INSTALLATION ET LANCEMENT LOCAL
# Version 1.2 : Nettoyage + V√©rification Ports + Auto-Lancement
# =====================================================

Write-Host "=== üöÄ Initialisation Apex Trade Capital ===" -ForegroundColor Cyan

# Dossiers
$backendPath = "$PWD\backend"
$rootPath = "$PWD"

# -----------------------------------------------------
# üßπ 1. Nettoyage automatique
# -----------------------------------------------------
Write-Host "üßπ Nettoyage automatique des caches Node/Vite..." -ForegroundColor Yellow

# Suppression de node_modules et dist si pr√©sents
$pathsToClean = @(
    "$rootPath\node_modules",
    "$rootPath\dist",
    "$backendPath\node_modules",
    "$backendPath\dist",
    "$env:APPDATA\npm-cache",
    "$env:LOCALAPPDATA\vite"
)
foreach ($path in $pathsToClean) {
    if (Test-Path $path) { Remove-Item $path -Recurse -Force -ErrorAction SilentlyContinue }
}
npm cache clean --force | Out-Null

Write-Host "‚úÖ Cache nettoy√© avec succ√®s." -ForegroundColor Green

# -----------------------------------------------------
# ‚öôÔ∏è 2. Configuration des fichiers .env
# -----------------------------------------------------
Write-Host "‚öôÔ∏è Configuration des fichiers d'environnement..." -ForegroundColor Yellow

if (Test-Path "$backendPath") {
    Set-Location $backendPath
    $envBackend = @"
PORT=3000
CORS_ORIGINS=http://localhost:5173,http://localhost:8080
"@
    $envBackend | Out-File -Encoding utf8 .env
    Write-Host "‚úÖ Fichier .env backend configur√©."
} else {
    Write-Host "‚ö†Ô∏è Dossier backend introuvable." -ForegroundColor Red
}

Set-Location $rootPath
$envFrontend = @"
VITE_API_URL=http://localhost:3000/api
VITE_WS_URL=ws://localhost:3000/ws/admin
"@
$envFrontend | Out-File -Encoding utf8 .env
Write-Host "‚úÖ Fichier .env frontend configur√©."

# -----------------------------------------------------
# üîé 3. V√©rification automatique des ports
# -----------------------------------------------------
function Test-Port {
    param([int]$Port)
    $tcp = Get-NetTCPConnection -LocalPort $Port -ErrorAction SilentlyContinue
    return $tcp -ne $null
}

Write-Host "üîç V√©rification des ports..." -ForegroundColor Yellow

if (Test-Port 3000) {
    Write-Host "‚ö†Ô∏è Le port 3000 (backend) est d√©j√† utilis√©. Fermeture du processus..." -ForegroundColor Red
    Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue | ForEach-Object {
        Stop-Process -Id $_.OwningProcess -Force -ErrorAction SilentlyContinue
    }
}
if (Test-Port 5173) {
    Write-Host "‚ö†Ô∏è Le port 5173 (frontend) est d√©j√† utilis√©. Fermeture du processus..." -ForegroundColor Red
    Get-NetTCPConnection -LocalPort 5173 -ErrorAction SilentlyContinue | ForEach-Object {
        Stop-Process -Id $_.OwningProcess -Force -ErrorAction SilentlyContinue
    }
}

Write-Host "‚úÖ Ports lib√©r√©s et pr√™ts √† √™tre utilis√©s." -ForegroundColor Green

# -----------------------------------------------------
# üíó 4. V√©rification du backend
# -----------------------------------------------------
Write-Host "üíó V√©rification du backend..." -ForegroundColor Yellow
$backendHealthy = $false
try {
    $response = Invoke-RestMethod -Uri "http://localhost:3000/api/health" -TimeoutSec 5
    if ($response.ok -eq $true) { $backendHealthy = $true }
} catch {}

if ($backendHealthy) {
    Write-Host "‚úÖ Backend d√©j√† actif." -ForegroundColor Green
} else {
    Write-Host "üü¢ D√©marrage du backend..." -ForegroundColor Green
    Start-Process powershell -ArgumentList "cd '$backendPath'; npm install; node server.js" -WindowStyle Minimized
    Start-Sleep -Seconds 8
}

# -----------------------------------------------------
# üíô 5. Lancement du frontend (Vite)
# -----------------------------------------------------
Write-Host "üíô Lancement du frontend (Vite)..." -ForegroundColor Yellow
try {
    Start-Process powershell -ArgumentList "cd '$rootPath'; npm install; npm run dev" -WindowStyle Minimized
    Write-Host "‚úÖ Frontend lanc√© avec succ√®s." -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur au lancement du frontend." -ForegroundColor Red
}

# -----------------------------------------------------
# üß© 6. R√©sum√© final
# -----------------------------------------------------
Write-Host ""
Write-Host "==============================================" -ForegroundColor DarkGray
Write-Host "‚ú® Installation compl√®te r√©ussie !" -ForegroundColor Green
Write-Host "üåç Frontend disponible : http://localhost:5173/"
Write-Host "üñ•Ô∏è Backend disponible : http://localhost:3000/"
Write-Host "==============================================" -ForegroundColor DarkGray
